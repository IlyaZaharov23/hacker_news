{"version":3,"file":"static/js/105.ebef5080.chunk.js","mappings":"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","sources":["store/hackerNews/selectors/getShowedStoryType/index.ts","config/api.ts","components/StoriesTypeSwitcher/constants/menuConfig.tsx","components/StoriesTypeSwitcher/styles.ts","components/StoriesTypeSwitcher/index.tsx","assets/mainLogo.svg","components/Logo/styles.ts","components/Logo/index.tsx","constants/testIds.ts","store/hooks/index.ts","components/StartPage/components/QuoteSkeleton/styles.ts","components/StartPage/components/QuoteSkeleton/index.tsx","components/StartPage/components/Footer/index.tsx","../node_modules/@mui/icons-material/esm/ArrowDropDown.js","../node_modules/@mui/icons-material/esm/ArrowDropUp.js","components/StartPage/constants/getStoriesTypeText.ts","components/StartPage/components/ActionsBlock/index.tsx","components/StartPage/index.tsx","components/CustomDivider/styles.ts","components/CustomDivider/index.tsx","constants/dividerTypes.ts","services/index.ts","store/hackerNews/actions.ts","components/StartPage/styles.ts"],"sourcesContent":["import { RootState } from \"store\";\n\nexport const getShowedStoryType = (state: RootState) =>\n  state.hackerNews.showedStoryType;\n","const API_URL = \"https://hacker-news.firebaseio.com/v0\";\n\nexport const API_ENDPOINTS = {\n  STORY: (id: number) => `${API_URL}/item/${id}.json?print=pretty`,\n  USER: (id: number) => `${API_URL}/user/${id}.json`,\n  COMMENT: (id: number) => `${API_URL}/item/${id}.json`,\n  MAX_ITEM_ID: `${API_URL}/maxitem.json`,\n  TOP_STORIES: `${API_URL}/topstories.json`,\n  NEW_STORIES: `${API_URL}/newstories.json?print=pretty`,\n  ASK_STORIES: `${API_URL}/askstories.json`,\n  SHOW_STORIES: `${API_URL}/showstories.json`,\n  JOB_STORIES: `${API_URL}/jobstories.json`,\n  BEST_STORIES: `${API_URL}/beststories.json`,\n  ITEM: (id: number) => `${API_URL}/item/${id}.json`,\n  ITEM_BY_ID: (id: number) => `${API_URL}/item/${id}.json`,\n};\n","import GradeIcon from \"@mui/icons-material/Grade\";\nimport FiberNewIcon from \"@mui/icons-material/FiberNew\";\nimport LiveHelpIcon from \"@mui/icons-material/LiveHelp\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport PushPinIcon from \"@mui/icons-material/PushPin\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport { STORIES_SHOWED_TYPE } from \"constants/storiesTypes\";\n\nexport const menuItems = [\n  {\n    value: STORIES_SHOWED_TYPE.ASK,\n    title: \"Ask\",\n    icon: (sx: any) => <LiveHelpIcon sx={sx} />,\n  },\n  {\n    value: STORIES_SHOWED_TYPE.BEST,\n    title: \"Best\",\n    icon: (sx: any) => <GradeIcon sx={sx} />,\n  },\n  {\n    value: STORIES_SHOWED_TYPE.JOB,\n    title: \"Job\",\n    icon: (sx: any) => <WorkIcon sx={sx} />,\n  },\n  {\n    value: STORIES_SHOWED_TYPE.NEW,\n    title: \"New\",\n    icon: (sx: any) => <FiberNewIcon sx={sx} />,\n  },\n  {\n    value: STORIES_SHOWED_TYPE.SHOW,\n    title: \"Show\",\n    icon: (sx: any) => <GitHubIcon sx={sx} />,\n  },\n  {\n    value: STORIES_SHOWED_TYPE.TOP,\n    title: \"Top\",\n    icon: (sx: any) => <PushPinIcon sx={sx} />,\n  },\n];\n","import {\n  darkGray,\n  white,\n  lightBrown,\n  orangePrimary,\n  lightGray,\n} from \"constants/colors\";\n\nexport const styles = {\n  menuItem: (\n    menuWidth: number | undefined,\n    fullWidth: boolean | undefined\n  ) => ({\n    backgroundColor: white,\n    width: fullWidth ? menuWidth : \"150px\",\n    color: darkGray,\n    \"&:hover\": {\n      color: darkGray,\n      backgroundColor: lightGray,\n    },\n  }),\n  activeMenuItem: {\n    color: orangePrimary,\n    backgroundColor: lightBrown,\n  },\n  title: {\n    fontSize: \"0.875rem\",\n    color: \"inherit\",\n    marginLeft: \"0.5rem\",\n  },\n  activeTitle: {\n    fontWeight: \"600\",\n    color: \"inherit\",\n  },\n  activeIcon: {\n    color: \"inherit\",\n  },\n};\n","import { FC } from \"react\";\nimport { Menu, MenuItem, Typography } from \"@mui/material\";\n\nimport {\n  clearActiveStories,\n  setShowedStoryType,\n  clearAllNestedComments,\n  clearAllStoryComments,\n} from \"store/hackerNews/actions\";\nimport { getShowedStoryType } from \"store/hackerNews/selectors/getShowedStoryType\";\nimport { useAppDispatch, useAppSelector } from \"store/hooks\";\nimport { TEST_ID } from \"constants/testIds\";\nimport { SWITCHER_BUTTON_WIDTH } from \"components/StartPage/styles\";\n\nimport { MenuPropsType } from \"./types\";\nimport { menuItems } from \"./constants/menuConfig\";\nimport { styles } from \"./styles\";\n\nexport const StoriesTypeSwitcher: FC<MenuPropsType> = ({\n  open,\n  switcherOpen,\n  closeSwitcher,\n  fullWidth,\n}) => {\n  const storiesShowedType = useAppSelector(getShowedStoryType);\n  const dispatch = useAppDispatch();\n  const changeStoriesType = (type: string) => {\n    dispatch(clearAllNestedComments());\n    dispatch(clearAllStoryComments());\n    dispatch(clearActiveStories());\n    dispatch(setShowedStoryType?.(type));\n    closeSwitcher();\n  };\n\n  const isItemActive = (value: string) => value === storiesShowedType;\n  return (\n    <Menu\n      open={open}\n      anchorEl={switcherOpen}\n      onClose={closeSwitcher}\n      disableAutoFocusItem\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"left\",\n      }}\n      PaperProps={{\n        style: {\n          width: fullWidth ? `${SWITCHER_BUTTON_WIDTH}px` : \"auto\",\n          minWidth: fullWidth ? \"unset\" : \"150px\",\n          marginTop: \"0.25rem\",\n        },\n      }}\n      data-testid={TEST_ID.NEWS_TYPE_SWITCHER.SWITCHER_ROOT}\n    >\n      {menuItems.map((item) => (\n        <MenuItem\n          key={item.value}\n          onClick={() => changeStoriesType(item.value)}\n          sx={{\n            ...styles.menuItem(SWITCHER_BUTTON_WIDTH, fullWidth),\n            ...(isItemActive(item.value) && styles.activeMenuItem),\n          }}\n          data-testid={TEST_ID.NEWS_TYPE_SWITCHER.SWITCHER_ITEM(item.value)}\n        >\n          {item.icon(isItemActive(item.value) && styles.activeIcon)}\n          <Typography\n            sx={{\n              ...styles.title,\n              ...(isItemActive(item.value) && styles.activeTitle),\n            }}\n          >\n            {item.title}\n          </Typography>\n        </MenuItem>\n      ))}\n    </Menu>\n  );\n};\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMainLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#FFFFFF\",\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0h24v24h-24zm12.8 13.446 4.339-8.303h-1.871q-2.143 4.018-2.839 5.786l-.375.96-.32-.75c-.96-2.374-1.931-4.348-3.022-6.243l.129.243h-1.984l4.286 8.2v5.52h1.657z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMainLogo);\nexport default __webpack_public_path__ + \"static/media/mainLogo.20ca4fb8dec9041b1379fd1dfacea91f.svg\";\nexport { ForwardRef as ReactComponent };","export const styles = {\n  imgWrapper: (size: number, color: string) => ({\n    backgroundColor: color,\n    height: `${size}px`,\n  }),\n};\n","import { FC } from \"react\";\nimport { Box } from \"@mui/material\";\nimport mainLogo from \"assets/mainLogo.svg\";\nimport { LogoPropsType } from \"./types\";\nimport { styles } from \"./styles\";\n\nexport const Logo: FC<LogoPropsType> = ({ size, testId, color }) => {\n  return (\n    <Box sx={styles.imgWrapper(size, color)} data-testid={testId}>\n      <img src={mainLogo} alt=\"app-logo\" width={size} height={size} />\n    </Box>\n  );\n};\n","export const TEST_ID = {\n  START_PAGE: {\n    START_PAGE_ROOT: \"start-page-root\",\n    GO_TO_NEWS_BUTTON: \"go-to-news-button\",\n    APP_LOGO: \"app-logo\",\n    APP_TITLE: \"app-title\",\n    SWITCHER_BUTTON: \"switcher-button\",\n    ACTIONS_TITLE: \"actions-title\",\n    FOOTER_QUOTE_SKELETON: \"footer-quote-skeleton\",\n    FOOTER_QUOTE_TEXT: \"footer-quote-text\",\n    FOOTER_ROOT: \"footer-root\",\n    CUSTOM_DIVIDER: \"custom-divider\",\n  },\n  NEWS_PAGE: {\n    NEWS_PAGE_ROOT: \"news-page-root\",\n    NEWS_ITEM_IN_LIST: (id: number | undefined) => `news-list-in-list-${id}`,\n    NEWS_SKELETON: \"news-skeleton\",\n    NEWS_PLACEHOLDER: \"news-placeholder\",\n    NEWS_ERROR_PLACEHOLDER: \"news-error-placeholder\",\n  },\n  STORY_PAGE: {\n    STORY_PAGE_ROOT: (id: number | undefined) => `story-page-root-${id}`,\n    STORY_HEADER: (id: number | undefined) => `story-header-${id}`,\n    STORY_HEADER_SKELETON: `story-header-skeleton`,\n    STORY_HEADER_TITLE: (id: number | undefined) => `story-header-title-${id}`,\n    STORY_HEADER_AUTHOR: (id: number | undefined) =>\n      `story-header-author-${id}`,\n    STORY_HEADER_PUBLISHED: (id: number | undefined) =>\n      `story-header-published-${id}`,\n    STORY_HEADER_REDIRECT_TO_STORY: (id: number | undefined) =>\n      `story-header-redirect-to-story-${id}`,\n    STORY_HEADER_ERROR_PLACEHOLDER: \"story-header-error-placeholder\",\n  },\n  COMMENTS: {\n    COMMENTS_ROOT: (id: number | undefined) => `comments-root-${id}`,\n    COMMENT_ITEM: (id: number | undefined) => `comment-item-${id}`,\n    SHOW_NESTED_COMMENTS_BUTTON: (id: number | undefined) =>\n      `show-nested-comments-button-${id}`,\n    HIDE_NESTED_COMMENTS_BUTTON: (id: number | undefined) =>\n      `hide-nested-comments-button-${id}`,\n    RELOAD_NESTED_COMMENTS_BUTTON: (id: number | undefined) =>\n      `reload-nested-comments-button-${id}`,\n    NESTED_COMMENTS_ROOT: (id: number | undefined) =>\n      `nested-comments-root-${id}`,\n    NESTED_COMMENTS_ERROR_PLACEHOLDER: (id: number | undefined) =>\n      `nested-comments-error-placeholder-${id}`,\n    COMMENTS_SKELETON: \"comments-skeleton\",\n    COMMENTS_PLACEHOLDER: \"comments-placeholder\",\n    COMMENTS_ERROR_PLACEHOLDER: \"comments-error-placeholder\",\n  },\n  HEADER: {\n    HEADER_ROOT: \"header-root\",\n    BACK_BUTTON: \"back-button\",\n    UPDATE_BUTTON: \"update-button\",\n    MENU_BUTTON: \"menu-button\",\n    APP_LOGO: \"app-logo\",\n  },\n  NEWS_TYPE_SWITCHER: {\n    SWITCHER_ROOT: \"switcher-root\",\n    SWITCHER_ITEM: (type: string) => `switcher-item-${type}`,\n  },\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector, TypedUseSelectorHook } from \"react-redux\";\n\nimport type { AppDispatch, RootState } from \"..\";\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const createAppAsyncThunk = createAsyncThunk.withTypes<{\n  state: RootState;\n  dispatch: AppDispatch;\n  rejectValue: string | null;\n}>();\n","export const styles = {\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginTop: \"4rem\",\n  },\n};\n","import { Box, Skeleton } from \"@mui/material\";\nimport { TEST_ID } from \"constants/testIds\";\nimport { styles } from \"./styles\";\n\nexport const QuoteSkeleton = () => {\n  return (\n    <Box\n      sx={styles.wrapper}\n      data-testid={TEST_ID.START_PAGE.FOOTER_QUOTE_SKELETON}\n    >\n      <Skeleton width=\"50vw\" height={24} />\n      <Skeleton width={80} height={24} />\n    </Box>\n  );\n};\n","import { FC } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\n\nimport { FooterPropsType } from \"components/StartPage/types\";\nimport { TEST_ID } from \"constants/testIds\";\n\nimport { QuoteSkeleton } from \"../QuoteSkeleton\";\nimport { styles } from \"../../styles\";\n\nexport const Footer: FC<FooterPropsType> = ({ isLoading, quote }) => {\n  return (\n    <Box data-testid={TEST_ID.START_PAGE.FOOTER_ROOT}>\n      {isLoading ? (\n        <QuoteSkeleton />\n      ) : (\n        <Box\n          sx={styles.bottomContent}\n          data-testid={TEST_ID.START_PAGE.FOOTER_QUOTE_TEXT}\n        >\n          <Typography sx={styles.quoteTitle}>{quote.text}</Typography>\n          <Typography sx={styles.quoteAuthor}>{quote.author}</Typography>\n        </Box>\n      )}\n    </Box>\n  );\n};\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');","import { STORIES_SHOWED_TYPE } from \"constants/storiesTypes\";\n\nexport const getStoriesTypeText = {\n  [STORIES_SHOWED_TYPE.ASK]: \"Ask Stories\",\n  [STORIES_SHOWED_TYPE.BEST]: \"Best Stories\",\n  [STORIES_SHOWED_TYPE.JOB]: \"Job Stories\",\n  [STORIES_SHOWED_TYPE.NEW]: \"New Stories\",\n  [STORIES_SHOWED_TYPE.SHOW]: \"Show Stories\",\n  [STORIES_SHOWED_TYPE.TOP]: \"Top Stories\",\n};\n","import { FC, useState, MouseEvent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\n\nimport { ActionsBlockPropsType } from \"components/StartPage/types\";\nimport { getStoriesTypeText } from \"components/StartPage/constants/getStoriesTypeText\";\nimport { StoriesTypeSwitcher } from \"components/StoriesTypeSwitcher\";\nimport { getShowedStoryType } from \"store/hackerNews/selectors/getShowedStoryType\";\nimport { SCREEN_ROUTES } from \"routes/constants\";\nimport { TEST_ID } from \"constants/testIds\";\n\nimport { styles } from \"../../styles\";\n\nexport const ActionsBlock: FC<ActionsBlockPropsType> = ({ setQuote }) => {\n  const [switcherOpen, setSwitcherOpen] = useState<HTMLElement | null>(null);\n  const navigate = useNavigate();\n  const storiesShowedType = useSelector(getShowedStoryType);\n\n  const isSwitcherOpen = Boolean(switcherOpen);\n\n  const goToNews = () => {\n    navigate(SCREEN_ROUTES.NEWS_LIST);\n    setQuote({ text: \"\", author: \"\" });\n  };\n\n  const closeSwitcher = () => {\n    setSwitcherOpen(null);\n  };\n\n  const openSwitcher = (e: MouseEvent<HTMLElement>) => {\n    setSwitcherOpen(e.currentTarget);\n  };\n\n  return (\n    <Box sx={styles.contentWrapper}>\n      <Box sx={styles.selectorWrapper}>\n        <Typography\n          sx={styles.selectorHelper}\n          data-testid={TEST_ID.START_PAGE.ACTIONS_TITLE}\n        >\n          Which news do you want to read?\n        </Typography>\n        <Box\n          sx={styles.switcherButton}\n          onClick={openSwitcher}\n          data-testid={TEST_ID.START_PAGE.SWITCHER_BUTTON}\n        >\n          <Typography sx={styles.storiesType}>{storiesShowedType}</Typography>\n          {isSwitcherOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n        </Box>\n      </Box>\n      <Button\n        onClick={goToNews}\n        sx={styles.showNewsButton}\n        data-testid={TEST_ID.START_PAGE.GO_TO_NEWS_BUTTON}\n      >\n        Go to {getStoriesTypeText[storiesShowedType]}\n      </Button>\n      {isSwitcherOpen && (\n        <StoriesTypeSwitcher\n          open={isSwitcherOpen}\n          switcherOpen={switcherOpen}\n          closeSwitcher={closeSwitcher}\n          fullWidth\n        />\n      )}\n    </Box>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { useAppDispatch } from \"store/hooks\";\nimport { Box } from \"@mui/material\";\n\nimport { Logo } from \"components/Logo\";\nimport { CustomDivider } from \"components/CustomDivider\";\nimport { getRandomQuote } from \"store/hackerNews/actions\";\nimport { DIVIDER_TYPE } from \"constants/dividerTypes\";\nimport { TEST_ID } from \"constants/testIds\";\nimport { orangePrimary } from \"constants/colors\";\n\nimport { Footer } from \"./components/Footer\";\nimport { ActionsBlock } from \"./components/ActionsBlock\";\nimport { QuoteType } from \"./types\";\nimport { styles } from \"./styles\";\n\nfunction StartPage() {\n  const dispatch = useAppDispatch();\n  const [quote, setQuote] = useState<QuoteType>({ text: \"\", author: \"\" });\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setQuote({ text: \"\", author: \"\" });\n    setIsLoading(true);\n    dispatch(getRandomQuote())\n      .unwrap()\n      .then((res) => {\n        setQuote({ text: `\"${res.text}\"`, author: `(c) ${res.author}` });\n      })\n      .finally(() => {\n        setTimeout(() => setIsLoading(false), 300);\n      });\n  }, []);\n\n  return (\n    <Box\n      sx={styles.pageWrapper}\n      data-testid={TEST_ID.START_PAGE.START_PAGE_ROOT}\n    >\n      <Box sx={styles.topContent}>\n        <Box sx={styles.logoWrapper}>\n          <Logo\n            size={196}\n            testId={TEST_ID.START_PAGE.APP_LOGO}\n            color={orangePrimary}\n          />\n        </Box>\n        <CustomDivider\n          position={DIVIDER_TYPE.VERTICAL}\n          height={320}\n          data-testid={TEST_ID.START_PAGE.CUSTOM_DIVIDER}\n        />\n        <ActionsBlock setQuote={setQuote} />\n      </Box>\n      <Footer\n        isLoading={isLoading}\n        quote={quote}\n      />\n    </Box>\n  );\n}\n\nexport default StartPage;\n","import { darkGray } from \"constants/colors\";\n\nexport const styles = {\n  horizontal: {\n    backgroundColor: darkGray,\n    margin: \"0.75rem 0\",\n    height: \"1px\",\n    width: `100%`,\n  },\n  vertical: (height: number | undefined) => ({\n    height: `${height}px`,\n    width: \"2px\",\n    backgroundColor: darkGray,\n  }),\n};\n","import { FC } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { DIVIDER_TYPE } from \"constants/dividerTypes\";\nimport { DividerPropsType } from \"./types\";\nimport { styles } from \"./styles\";\n\nexport const CustomDivider: FC<DividerPropsType> = ({ position, height }) => {\n  return (\n    <Box\n      sx={\n        position === DIVIDER_TYPE.VERTICAL\n          ? styles.vertical(height)\n          : styles.horizontal\n      }\n    />\n  );\n};\n","export const DIVIDER_TYPE = {\n  VERTICAL: \"vertical\",\n  HORIZONTAL: \"horizontal\",\n};\n","import axios from \"axios\";\n\nexport class ApiWrapper {\n  static getHeaders() {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n    return { headers };\n  }\n  static get(url: string) {\n    return axios.get(url, this.getHeaders());\n  }\n}\n","import { createAppAsyncThunk } from \"../hooks\";\nimport { API_ENDPOINTS } from \"config/api\";\nimport { ApiWrapper } from \"services\";\nimport { hackerNewsSlice } from \"./reducers/reducers\";\nimport axios from \"axios\";\n\nexport const {\n  setNewStories,\n  addActiveStory,\n  clearActiveStories,\n  addStoryComments,\n  clearAllStoryComments,\n  addNestedCommentsById,\n  removeNestedCommentsById,\n  clearAllNestedComments,\n  setShowedStoryType,\n} = hackerNewsSlice.actions;\n\nexport const getStoryIds = createAppAsyncThunk(\n  \"hackerNews/getStoryIds\",\n  async (apiEndpoint: string) => {\n    try {\n      const resp = await ApiWrapper.get(apiEndpoint);\n      return resp.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const getStoryById = createAppAsyncThunk(\n  \"hackerNews/getStoryById\",\n  async (id: number) => {\n    try {\n      const resp = await ApiWrapper.get(API_ENDPOINTS.STORY(id));\n      return resp.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const getCommentById = createAppAsyncThunk(\n  \"hackerNews/getCommentById\",\n  async (id: number) => {\n    try {\n      const resp = await ApiWrapper.get(API_ENDPOINTS.COMMENT(id));\n      return resp.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nexport const getRandomQuote = createAppAsyncThunk(\n  \"hackerNews/getRandomQuote\",\n  async () => {\n    try {\n      const resp = await ApiWrapper.get(\"https://stoic-quotes.com/api/quote\");\n      return resp.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n","import {\n  white,\n  black,\n  borderGray,\n  lightBrown,\n  darkGray,\n} from \"constants/colors\";\n\nconst SWITCHER_BLOCK_WIDTH = 200;\nconst SWITCHER_PADDING_X = 16;\nconst SWITCHER_BORDER_SIZE = 1.5;\n\nexport const SWITCHER_BUTTON_WIDTH =\n  SWITCHER_BLOCK_WIDTH + SWITCHER_PADDING_X * 2 + SWITCHER_BORDER_SIZE * 2;\n\nexport const styles = {\n  pageWrapper: {\n    backgroundColor: lightBrown,\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  topContent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  bottomContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"4rem\",\n    maxWidth: \"50vw\",\n    height: \"48px\",\n  },\n  contentWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: \"0 6rem\",\n  },\n  logoWrapper: {\n    margin: \"0 6rem\",\n    border: `2px solid ${darkGray}`,\n  },\n  showNewsButton: {\n    height: \"36px\",\n    width: `calc(${SWITCHER_BUTTON_WIDTH}px + ${SWITCHER_PADDING_X * 2}px)`,\n    backgroundColor: black,\n    color: white,\n    fontWeight: \"600\",\n    textTransform: \"none\",\n  },\n  imgWrapper: {\n    backgroundColor: black,\n    height: \"128px\",\n  },\n  selectorWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  selectorHelper: {\n    fontSize: \"2rem\",\n    fontWeight: \"600\",\n    color: black,\n  },\n  switcherButton: {\n    width: `${SWITCHER_BLOCK_WIDTH}px`,\n    height: \"42px\",\n    border: `${SWITCHER_BORDER_SIZE}px solid ${borderGray}`,\n    borderRadius: \"6px\",\n    backgroundColor: white,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"0 1rem\",\n    cursor: \"pointer\",\n    margin: \"1.5rem 0\",\n  },\n  storiesType: {\n    fontSize: \"0.875rem\",\n    fontWeight: \"600\",\n    color: black,\n  },\n  quoteTitle: {\n    fontWeight: \"1rem\",\n    fontStyle: \"italic\",\n    color: darkGray,\n  },\n  quoteAuthor: {\n    fontWeight: \"0.875rem\",\n    fontStyle: \"italic\",\n    alignSelf: \"flex-end\",\n    color: darkGray,\n  },\n};\n"],"names":["getShowedStoryType","state","hackerNews","showedStoryType","API_URL","API_ENDPOINTS","STORY","id","USER","COMMENT","MAX_ITEM_ID","TOP_STORIES","NEW_STORIES","ASK_STORIES","SHOW_STORIES","JOB_STORIES","BEST_STORIES","ITEM","ITEM_BY_ID","menuItems","value","STORIES_SHOWED_TYPE","ASK","title","icon","sx","_jsx","LiveHelpIcon","BEST","GradeIcon","JOB","WorkIcon","NEW","FiberNewIcon","SHOW","GitHubIcon","TOP","PushPinIcon","styles","menuItem","menuWidth","fullWidth","backgroundColor","white","width","color","darkGray","lightGray","activeMenuItem","orangePrimary","lightBrown","fontSize","marginLeft","activeTitle","fontWeight","activeIcon","StoriesTypeSwitcher","_ref","open","switcherOpen","closeSwitcher","storiesShowedType","useAppSelector","dispatch","useAppDispatch","isItemActive","Menu","anchorEl","onClose","disableAutoFocusItem","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","style","SWITCHER_BUTTON_WIDTH","minWidth","marginTop","TEST_ID","NEWS_TYPE_SWITCHER","SWITCHER_ROOT","children","map","item","_jsxs","MenuItem","onClick","changeStoriesType","type","clearAllNestedComments","clearAllStoryComments","clearActiveStories","setShowedStoryType","SWITCHER_ITEM","Typography","imgWrapper","size","height","Logo","testId","Box","src","mainLogo","alt","START_PAGE","START_PAGE_ROOT","GO_TO_NEWS_BUTTON","APP_LOGO","APP_TITLE","SWITCHER_BUTTON","ACTIONS_TITLE","FOOTER_QUOTE_SKELETON","FOOTER_QUOTE_TEXT","FOOTER_ROOT","CUSTOM_DIVIDER","NEWS_PAGE","NEWS_PAGE_ROOT","NEWS_ITEM_IN_LIST","NEWS_SKELETON","NEWS_PLACEHOLDER","NEWS_ERROR_PLACEHOLDER","STORY_PAGE","STORY_PAGE_ROOT","STORY_HEADER","STORY_HEADER_SKELETON","STORY_HEADER_TITLE","STORY_HEADER_AUTHOR","STORY_HEADER_PUBLISHED","STORY_HEADER_REDIRECT_TO_STORY","STORY_HEADER_ERROR_PLACEHOLDER","COMMENTS","COMMENTS_ROOT","COMMENT_ITEM","SHOW_NESTED_COMMENTS_BUTTON","HIDE_NESTED_COMMENTS_BUTTON","RELOAD_NESTED_COMMENTS_BUTTON","NESTED_COMMENTS_ROOT","NESTED_COMMENTS_ERROR_PLACEHOLDER","COMMENTS_SKELETON","COMMENTS_PLACEHOLDER","COMMENTS_ERROR_PLACEHOLDER","HEADER","HEADER_ROOT","BACK_BUTTON","UPDATE_BUTTON","MENU_BUTTON","useDispatch","useSelector","createAppAsyncThunk","createAsyncThunk","withTypes","wrapper","display","flexDirection","justifyContent","alignItems","QuoteSkeleton","Skeleton","Footer","isLoading","quote","bottomContent","quoteTitle","text","quoteAuthor","author","createSvgIcon","d","getStoriesTypeText","ActionsBlock","setQuote","setSwitcherOpen","useState","navigate","useNavigate","isSwitcherOpen","Boolean","contentWrapper","selectorWrapper","selectorHelper","switcherButton","e","currentTarget","storiesType","ArrowDropUpIcon","ArrowDropDownIcon","Button","goToNews","SCREEN_ROUTES","NEWS_LIST","showNewsButton","setIsLoading","useEffect","getRandomQuote","unwrap","then","res","finally","setTimeout","pageWrapper","topContent","logoWrapper","CustomDivider","position","DIVIDER_TYPE","VERTICAL","margin","HORIZONTAL","ApiWrapper","getHeaders","headers","get","url","axios","this","setNewStories","addActiveStory","addStoryComments","addNestedCommentsById","removeNestedCommentsById","hackerNewsSlice","actions","getStoryIds","async","apiEndpoint","data","error","console","log","getStoryById","getCommentById","SWITCHER_BLOCK_WIDTH","maxWidth","border","black","textTransform","borderGray","borderRadius","padding","cursor","fontStyle","alignSelf"],"sourceRoot":""}